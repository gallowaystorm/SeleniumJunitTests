package SeleniumChromeTest;

import static org.junit.Assert.assertTrue;
import org.junit.Test;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.junit.Assert;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.openqa.selenium.StaleElementReferenceException;

import java.util.*;
import java.util.concurrent.TimeUnit;

import com.google.common.graph.Network;

import java.net.MalformedURLException;
import java.net.URL;

public class AppTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() throws InterruptedException {
      //sets chrome driver...this will have to change on every machine
    System.setProperty("webdriver.chrome.driver",
        "C:\\Users\\gallo\\OneDrive\\Documents\\Programming\\WebDrivers\\chromedriver.exe");

    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();

    //go to home landing page and set size of browser
    driver.manage().window().maximize();
    driver.manage().deleteAllCookies();
    driver.get("http://localhost/cosc612projAkeeri/homeLandingPage.php");
    driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
  }

  @After
  public void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  @Test
  public void addtoCartTest() throws InterruptedException {
    //takes care of nodes 2,29,30,31
    logIn(driver);
    //takes care of nodes 4, 5, 6
    searchForItem();
    //takes care of nodes 6, 7, 8, 9
    addtoCart();
  }

  @Test
  public void removeItemInCart() throws InterruptedException{
    //takes care of nodes 2,29,30,31
    logIn(driver);
    //takes care of nodes 4, 5, 6
    searchForItem();
    //takes care of nodes 6, 7, 8, 9
    addtoCart();
    //takes care of node 12
    enterShippingInformation();
    Actions act =  new Actions(driver);
    act.moveToElement(driver.findElement(By.cssSelector("tr:nth-child(2) button"))).click().perform();
  }

  @Test
  public void enterShippingInformationTest() throws InterruptedException{
    //takes care of nodes 2,29,30,31
    logIn(driver);
    //takes care of nodes 4, 5, 6
    searchForItem();
    //takes care of nodes 6, 7, 8, 9
    addtoCart();
    //takes care of node 12
    enterShippingInformation();
    driver.findElement(By.id("displayShippingAddress")).click();
  }


  //Start of Edge coverage test paths

  @Test
  public void edgeTestPath1(){
    //path is 1, 6, 1
    driver.findElement(By.cssSelector(".col-lg-4:nth-child(1) .img-responsive")).click();
    driver.findElement(By.linkText("Home")).click();
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  @Test
  public void edgeTestPath2(){
    //path is 1,9 ,11, 1
    //need to be logged in to get to node 9
    logIn(driver);
    driver.findElement(By.linkText("Cart")).click();
    //takes care of nodes 11 and 1
    notDoneShopping();
  }

  @Test
  public void edgeTestPath3(){
    //path is 1, 2, 29, 30, 31, 1
    logIn(driver);
  }

  @Test
  public void edgeTestPath4(){
    //path is [1,3,24,25,26,27,28]
    registerAccount();
  }

  @Test
  public void edgeTestPath5(){
    //path is [1,9,12,13,14,15,16,17,19,32,33,34,1]
    //need to be logged in to perform this test 
    logIn(driver);
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    addtoCart();
    guestCheckout();
  }

  @Test
  public void edgeTestPath6(){
      //path is [1,9,12,13,14,15,16,17,18,20,21,35,22,23,1]
    //need to be logged in to perform this test 
    logIn(driver);
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    //to ensure that something is in the cart
    addtoCart();
    checkoutWithPaypalAccount();
  }

  @Test
  public void edgeTestPath7(){
    //path is [1,6,9,1]
    //need to be logged in to perform this test 
    logIn(driver);
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    driver.findElement(By.linkText("Home")).click();
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  @Test
  public void edgeTestPath8(){
    //path is [1,9,10,9,1]
    //need to be logged in to perform this test 
    logIn(driver);
    driver.findElement(By.linkText("Cart")).click();
    Actions act =  new Actions(driver);
    act.moveToElement(driver.findElement(By.cssSelector("tr:nth-child(2) button"))).click().perform();
    driver.findElement(By.linkText("Home")).click();
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  @Test
  public void edgeTestPath9(){
    //path is [1,6,7,8,9,1]
    //need to be logged in to perform this test 
    logIn(driver);
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    addtoCart();
    wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Home")));
    retryingFindClick(driver.findElement(By.linkText("Home")));
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  @Test
  public void edgeTestPath10(){
    //path is [1,4,5,6,1]
    searchForItem();
    retryingFindClick(driver.findElement(By.linkText("Home")));
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }


  //Start of Edge-Pair Coverage test paths

  @Test
  public void edgePairTestPath1(){
    //test path is [1,6,7,8,9,11,1,9,1,3,24,25,26,27,28]
    //need to be logged in to perform the first part of the test
    logIn(driver);
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    addtoCart();
    notDoneShopping();
    driver.findElement(By.linkText("Cart")).click();
    retryingFindClick(driver.findElement(By.linkText("Home")));
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
    //logout to start node 3 (the register button)
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[1]/p/button")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[1]/p/button")));
    retryingFindClick(driver.findElement(By.linkText("Home")));
    //test to ensure that we actually landed back on node 1 (the home page)
    bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
    //start on node 3
    registerAccount();
  }

  @Test
  public void edgePairTestPath2(){
    //test path is [1,9,12,13,14,15,16,17,18,20,21,35,22,23,1,6,9,11,1,2,29,30,31,1]
    //need to be logged in to perform test
    logIn(driver);
    //ensure that something is in the cart
    //to ensure that something is in the cart
    WebDriverWait wait = new WebDriverWait(driver,20);
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    addtoCart();
    //go back to node 1 and start test
    retryingFindClick(driver.findElement(By.linkText("Home")));
    driver.findElement(By.linkText("Cart")).click();
    checkoutWithPaypalAccount();
    //resume test at node 1, 6, 9 ...
    wait.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    retryingFindClick(driver.findElement(By.xpath("/html/body/div[3]/div/div[2]/div/a")));
    driver.findElement(By.linkText("Cart")).click();
    notDoneShopping();
    driver.navigate().refresh();
    logIn(driver);
    //test to ensure that we actually landed back on node 1 (the home page)
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  @Test
  public void edgePairTestPath3(){
    //test path is [1,6,1,3,24,25,26,27,28]
  }

  @Test
  public void edgePairTestPath4(){
    //test path is [1,9,12,13,14,15,16,17,19,32,33,34,1,6,1,4,5,6,9,10,9,1,4,5,6,7,8,9,10,9,10,9,12,13,14,15,16,17,19,32,33,34,1]
  }

  @Test
  public void edgePairTestPath5(){
    //test path is [1,2,29,30,31,1,6,1,6,7,8,9,1,6,9,1,9,12,13,14,15,16,17,19,32,33,34,1,2,29,30,31,1]
  }

  @Test
  public void edgePairTestPath6(){
    //test path is [1,9,12,13,14,15,16,17,19,32,33,34,1,9,1,9,1,6,1,2,29,30,31,1,2,29,30,31,1]
  }

  @Test
  public void edgePairTestPath7(){
    //test path is [1,2,29,30,31,1,9,10,9,11,1,4,5,6,1,9,1,2,29,30,31,1]
  }

  @Test
  public void edgePairTestPath8(){
    //test path is [1,9,12,13,14,15,16,17,18,20,21,35,22,23,1,9,1,9,11,1,6,9,12,13,14,15,16,17,18,20,21,35,22,23,1,2,29,30,31,1]
  }

  @Test
  public void edgePairTestPath9(){
    //test path is [1,6,7,8,9,12,13,14,15,16,17,19,32,33,34,1]
  }

  @Test
  public void edgePairTestPath10(){
    //test path is [1,9,11,1,3,24,25,26,27,28]
  }

  @Test
  public void edgePairTestPath11(){
    //test path is [1,9,12,13,14,15,16,17,18,20,21,35,22,23,1,4,5,6,1]
  }

  @Test
  public void edgePairTestPath12(){
    //test path is [1,9,12,13,14,15,16,17,18,20,21,35,22,23,1,3,24,25,26,27,28]
  }

  @Test
  public void edgePairTestPath13(){
    //test path is [1,2,29,30,31,1,4,5,6,1]
  }

  @Test
  public void edgePairTestPath14(){
    //test path is [1,2,29,30,31,1,3,24,25,26,27,28]
  }

  @Test
  public void edgePairTestPath15(){
    //test path is [1,9,12,13,14,15,16,17,19,32,33,34,1,4,5,6,1]
  }

  @Test
  public void edgePairTestPath16(){
    //test path is [1,9,12,13,14,15,16,17,19,32,33,34,1,3,24,25,26,27,28]
  }

    
  
  //functions needed to run tests properly

  public void logIn(WebDriver driver){
      //to check if logged in or not
    String bodyText = driver.findElement(By.tagName("body")).getText();
    if(bodyText.contains("LOG OUT")) {
        retryingFindClick(driver.findElement(By.id("Logout")));
        driver.get("http://localhost/cosc612projAkeeri/homeLandingPage.php");
      } 
      retryingFindClick(driver.findElement(By.id("LoginButton")));
      retryingFindClick(driver.findElement(By.name("caffeineUsername")));
      driver.findElement(By.name("caffeineUsername")).sendKeys("ajikee1");
      driver.findElement(By.name("caffeinePassword")).sendKeys("test123");
      retryingFindClick(driver.findElement(By.id("loginSubmit")));
  }

  public void searchForItem(){
    retryingFindClick(driver.findElement(By.id("searchBox")));
    driver.findElement(By.id("searchBox")).sendKeys("echo dot");
    retryingFindClick(driver.findElement(By.cssSelector("#searchResults .img-responsive")));
  }

  public void addtoCart(){
    retryingFindClick(driver.findElement(By.name("quantity")));
    WebElement dropdown = driver.findElement(By.name("quantity"));
    retryingFindClick(dropdown.findElement(By.xpath("//option[. = '1']")));
    retryingFindClick(driver.findElement(By.name("quantity")));
    retryingFindClick(driver.findElement(By.id("AddToCartBtn")));
  }

  public void enterShippingInformation(){
    driver.findElement(By.id("displayShippingAddress")).click();
    driver.findElement(By.name("Street")).sendKeys("123 test lane");
    driver.findElement(By.name("County")).sendKeys("Elkridge");
    driver.findElement(By.name("State")).sendKeys("MD");
    driver.findElement(By.name("Zip")).sendKeys("21075");
    driver.findElement(By.id("displayShippingAddress")).click();
  }

  public void checkoutWithPaypalAccount() {
    WebDriverWait wait = new WebDriverWait(driver,20);
    retryingFindClick(driver.findElement(By.cssSelector("input:nth-child(13)")));
    wait.until(ExpectedConditions.elementToBeClickable(By.id("itemPrice")));
    retryingFindClick(driver.findElement(By.id("itemPrice")));
    driver.findElement(By.id("itemPrice")).sendKeys("50");
    retryingFindClick(driver.findElement(By.cssSelector(".continue-btn")));
    {
      WebElement element = driver.findElement(By.cssSelector(".continue-btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("email")).click();
    {
      WebElement element = driver.findElement(By.id("btnNext"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.id("email")).sendKeys("ajikee1@icloud.com");
    driver.findElement(By.id("btnNext")).click();
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("password")).sendKeys("Test123#");
    driver.findElement(By.id("btnLogin")).click();
    driver.findElement(By.id("confirmButtonTop")).click();
    driver.get("http://localhost//cosc612projAkeeri/homeLandingPagePost.php");
  }

  public void guestCheckout() {
    WebDriverWait wait = new WebDriverWait(driver,20);
    retryingFindClick(driver.findElement(By.cssSelector("input:nth-child(13)")));
    wait.until(ExpectedConditions.elementToBeClickable(By.id("itemPrice")));
    retryingFindClick(driver.findElement(By.id("itemPrice")));
    driver.findElement(By.id("itemPrice")).sendKeys("50");
    retryingFindClick(driver.findElement(By.cssSelector(".continue-btn")));
    {
      WebElement element = driver.findElement(By.cssSelector(".continue-btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.id("btnNext"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("createAccount")).click();
    String bodyText = driver.findElement(By.id("pageTitle")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("PayPal Guest Checkout"));
    driver.findElement(By.id("cc")).click();
    driver.findElement(By.id("cc")).sendKeys("1234 5678 1234 5678");
    driver.findElement(By.id("cardType")).click();
    Select clickCreditCardType = new Select(driver.findElement(By.id("cardType")));
    clickCreditCardType.selectByVisibleText("MasterCard");
    driver.findElement(By.id("expiry_value")).click();
    driver.findElement(By.id("expiry_value")).sendKeys("1234");
    driver.findElement(By.id("cvv")).click();
    driver.findElement(By.id("cvv")).sendKeys("123");
    driver.findElement(By.id("firstName")).click();
    driver.findElement(By.id("firstName")).sendKeys("John");
    driver.findElement(By.id("lastName")).click();
    driver.findElement(By.id("lastName")).sendKeys("Doe");
    driver.findElement(By.id("billingLine1")).click();
    driver.findElement(By.id("billingLine1")).sendKeys("123 Test Lane");
    driver.findElement(By.id("billingLine2")).click();
    driver.findElement(By.id("billingLine2")).sendKeys("APT 1234");
    driver.findElement(By.id("billingCity")).click();
    driver.findElement(By.id("billingCity")).sendKeys("Test City");
    driver.findElement(By.id("billingState")).click();
    Select clickState = new Select(driver.findElement(By.id("billingState")));
    clickState.selectByVisibleText("Colorado");
    driver.findElement(By.id("billingPostalCode")).click();
    driver.findElement(By.id("billingPostalCode")).sendKeys("12345");
    driver.findElement(By.id("telephone")).click();
    driver.findElement(By.id("telephone")).sendKeys("1234567890");
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys("test@test.com");
    driver.findElement(By.id("guestSubmit")).click();
    driver.get("http://localhost/cosc612projAkeeri/homeLandingPage.php");
  }

  public void notDoneShopping() {
    driver.findElement(By.linkText("Not done shopping? Click here to add more items....")).click();
    String bodyText = driver.findElement(By.tagName("body")).getText();
    Assert.assertTrue("Text not found!", bodyText.contains("Search Results:") || bodyText.contains(("Our top products:")));
  }

  public void registerAccount() {
    //test to ensure that no one is logged in
    if(driver.findElement(By.id("LoginButton")).getText().equalsIgnoreCase("log out")){
      driver.findElement(By.id("Logout")).click();
      driver.findElement(By.linkText("here")).click();
    }
    driver.findElement(By.id("registerButton")).click();
    driver.findElement(By.name("firstName")).click();
    driver.findElement(By.name("firstName")).sendKeys("John");
    driver.findElement(By.name("LastName")).sendKeys("Doe");
    driver.findElement(By.name("Street")).sendKeys("123 Test Lane");
    driver.findElement(By.name("County")).sendKeys("Howard");
    driver.findElement(By.id("state")).click();
    {
      WebElement dropdown = driver.findElement(By.id("state"));
      dropdown.findElement(By.xpath("//option[. = 'KY']")).click();
    }
    driver.findElement(By.id("state")).click();
    driver.findElement(By.name("Zip")).click();
    driver.findElement(By.name("Zip")).sendKeys("12345");
    driver.findElement(By.name("email")).click();
    driver.findElement(By.name("email")).sendKeys("test@test.com");
    driver.findElement(By.id("registrationSubmit")).click();
    driver.findElement(By.name("registeredEmail")).click();
    driver.findElement(By.name("registeredEmail")).sendKeys("test@test.com");
    driver.findElement(By.name("activationCode")).click();
    driver.findElement(By.name("activationCode")).sendKeys("1234567890");
    driver.findElement(By.id("activateSubmit")).click();
  }
  
  public boolean retryingFindClick(WebElement webElement) {
      boolean result = false;
      int attempts = 0;
      while (attempts < 4) {
        try {
          webElement.click();
          result = true;
          break;
        } catch (StaleElementReferenceException e) {
          }
          attempts++;
      }
      return result;
  }
}
